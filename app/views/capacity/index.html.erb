
<script>
var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 400 - margin.left - margin.right,
    height = 250 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var path_x = d3.scale.linear()
    .range([0, width]);

var path_y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .x(function(d) { return x(d[0]); })
    .y(function(d) { return y(d[1]); });

  var rendered = {};

  function render_graph(data) {

    if (rendered[data.index] == true) {
      return
    }

    var svg = d3.select("#graph-" + data.index).append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    points = data.points
    fit = data.best_fit

    x.domain([0, d3.max(points, function(d) { return d[0]; })]);
    y.domain([0, d3.max(points, function(d) { return d[1]; })]);

    svg.append("line")
       .attr("class", "line")
       .attr("x1", function(d) { return x(fit[0][0]); })
       .attr("y1", function(d) { return y(fit[0][1]); })
       .attr("x2", function(d) { return x(fit[1][0]); })
       .attr("y2", function(d) { return y(fit[1][1]); });

    svg.selectAll("dot")
       .data(points)
       .enter().append("circle")
       .attr("r", 2.5)
       .attr("cx", function(d) { return x(d[0]); })
       .attr("cy", function(d) { return y(d[1]); });

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("RPM");
   }

   function render_snippet(data) {
    $('#graphs').append(['<div class="row">',
      '<div class="metric span4">',
        'Name: ' + data.name + '<br />',
        'Host: ' + data.host + '<br />',
        'Prediction: ' + data.prediction + ' <br />',
      '</div>',
      '<div id="graph-' + data.index + '" class="span8"></div>',
    '</div>'
    ].join("\n"));
    render_graph(data);
   }

function render_conclusion(data) {
  $('#conclusion').html(['<span class="rpm">' + data.host + '</span> will exhaust ',
      '<span class="rpm">' + data.name + '</span> at ',
      '<span class="rpm">' + data.prediction + '</span> RPM'].join(''))
}

d3.json("/data.json", function (data, error) {
   d3.select("body").selectAll("p")
     .data(data)
     .enter()
     .append("p")
     .each(render_snippet);

   render_conclusion(data[1]);
});

</script>

<div id="conclusion">
  <marquee>Loading...</marquee>
</div>
<div id="graphs"></div>
